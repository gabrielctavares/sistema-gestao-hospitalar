@page "/internacoes/details"
@inject NavigationManager NavigationManager
@inject IInternacaoService InternacaoService

<PageTitle>Detalhes</PageTitle>

<h1>Detalhes</h1>

<div>
    <h2>Internação</h2>
    <hr />
    @if (internacao is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Paciente</dt>
            <dd class="col-sm-10">(@internacao.IdPaciente) - @internacao.NomePaciente</dd>
            <dt class="col-sm-2">Quarto</dt>
            <dd class="col-sm-10">@internacao.IdQuarto</dd>
            <dt class="col-sm-2">Data de Entrada</dt>
            <dd class="col-sm-10">@internacao.DataEntrada</dd>
            <dt class="col-sm-2">Data de Saida</dt>
            <dd class="col-sm-10">@internacao.DataSaida</dd>
            <dt class="col-sm-2">Responsável</dt>
            <dd class="col-sm-10">(@internacao.IdResponsavel) - @internacao.NomeResponsavel</dd>
            <dt class="col-sm-2">Tratamento</dt>
            <dd class="col-sm-10">@internacao.Tratamento</dd>
        </dl>
        <div>
            <a href="@($"/internacoes/edit?idinternacao={internacao.IdInternacao}")">Editar</a> |
            <a href="@($"/internacoes")">Voltar</a>
        </div>
    }
</div>

@code {
    private Internacao? internacao;

    [SupplyParameterFromQuery]
    private int IdInternacao { get; set; }

    protected override async Task OnInitializedAsync()
    {
        internacao = await InternacaoService.GetInternacaoByIdAsync(IdInternacao);

        if (internacao is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
