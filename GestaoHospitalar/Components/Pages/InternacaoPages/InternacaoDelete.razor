@page "/internacoes/delete"
@inject NavigationManager NavigationManager
@inject IInternacaoService InternacaoService
@inject ISnackbar Snackbar

<PageTitle>Deletar</PageTitle>

<h1>Deletar</h1>

<p>Tem certeza que deseja deletar isso?</p>
<div>
    <h2>Internação</h2>
    <hr />
    @if (internacao is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Paciente</dt>
            <dd class="col-sm-10">(@internacao.IdPaciente) - @internacao.NomePaciente</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Quarto</dt>
            <dd class="col-sm-10">@internacao.IdQuarto</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Data de Entrada</dt>
            <dd class="col-sm-10">@internacao.DataEntrada</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Data de Saida</dt>
            <dd class="col-sm-10">@internacao.DataSaida</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Responsável</dt>
            <dd class="col-sm-10">(@internacao.IdResponsavel) - @internacao.NomeResponsavel</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tratamento</dt>
            <dd class="col-sm-10">@internacao.Tratamento</dd>
        </dl>
        <EditForm method="post" Model="internacao" OnValidSubmit="DeleteInternacao" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(internacao is null)">Deletar</button> |
            <a href="/internacaos">Voltar</a>
        </EditForm>
    }
</div>

@code {
    private Internacao? internacao;

    [SupplyParameterFromQuery]
    private int IdInternacao { get; set; }

    protected override async Task OnInitializedAsync()
    {
        internacao = await InternacaoService.GetInternacaoByIdAsync(IdInternacao);

        if (internacao is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteInternacao()
    {
        try
        {
            await InternacaoService.DeleteInternacaoAsync(internacao!.IdInternacao);
            NavigationManager.NavigateTo("/internacoes");
        }
        catch (Exception e)
        {

            Snackbar.Add("Erro ao deletar internação." + e.Message, Severity.Error);
        }
    }
}
