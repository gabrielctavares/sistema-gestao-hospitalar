@page "/internacoes/delete"
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Internacao</h2>
    <hr />
    @if (internacao is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">IdPaciente</dt>
            <dd class="col-sm-10">@internacao.IdPaciente</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IdQuarto</dt>
            <dd class="col-sm-10">@internacao.IdQuarto</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataEntrada</dt>
            <dd class="col-sm-10">@internacao.DataEntrada</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataSaida</dt>
            <dd class="col-sm-10">@internacao.DataSaida</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IdResponsavel</dt>
            <dd class="col-sm-10">@internacao.IdResponsavel</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tratamento</dt>
            <dd class="col-sm-10">@internacao.Tratamento</dd>
        </dl>
        <EditForm method="post" Model="internacao" OnValidSubmit="DeleteInternacao" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(internacao is null)">Delete</button> |
            <a href="/internacaos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Internacao? internacao;

    [SupplyParameterFromQuery]
    private int IdInternacao { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //using var context = DbFactory.CreateDbContext();
        //internacao = await context.Internacao.FirstOrDefaultAsync(m => m.IdInternacao == IdInternacao);

        if (internacao is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteInternacao()
    {
        //using var context = DbFactory.CreateDbContext();
        //context.Internacao.Remove(internacao!);
        //await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/internacaos");
    }
}
