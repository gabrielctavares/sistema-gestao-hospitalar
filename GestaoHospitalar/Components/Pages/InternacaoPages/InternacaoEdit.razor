@page "/internacoes/edit"
@inject NavigationManager NavigationManager
@inject IInternacaoService InternacaoService
@inject IPacienteService PacienteService
@inject IMedicoService MedicoService
@inject ISnackbar Snackbar

<PageTitle>Editar</PageTitle>

<h1>Editar</h1>

<h2>Internação</h2>
<hr />
@if (Internacao is null || medicos is null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="Internacao" OnValidSubmit="UpdateInternacao" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="Internacao.IdInternacao" value="@Internacao.IdInternacao" />

                <div class="mb-3">
                    <label for="responsavel">Responsável</label>
                    <InputSelect id="responsavel" class="form-control" @bind-Value="Internacao.IdResponsavel">
                        <option value="0">-- Selecione --</option>
                        @foreach (var medico in medicos!)
                        {
                            <option value="@medico.IdFuncionario">@medico.Nome (@medico.Especialidade)</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Internacao.IdResponsavel)" />
                </div>
                <div class="mb-3">
                    <label for="idquarto" class="form-label">Quarto:</label>
                    <InputNumber id="idquarto" @bind-Value="Internacao.IdQuarto" class="form-control" />
                    <ValidationMessage For="() => Internacao.IdQuarto" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="dataentrada" class="form-label">Data de Entrada:</label>
                    <InputDate id="dataentrada" @bind-Value="Internacao.DataEntrada" class="form-control" />
                    <ValidationMessage For="() => Internacao.DataEntrada" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="datasaida" class="form-label">Data de Saida:</label>
                    <InputDate id="datasaida" @bind-Value="Internacao.DataSaida" class="form-control" />
                    <ValidationMessage For="() => Internacao.DataSaida" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="tratamento" class="form-label">Tratamento:</label>
                    <InputText id="tratamento" @bind-Value="Internacao.Tratamento" class="form-control" />
                    <ValidationMessage For="() => Internacao.Tratamento" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Salvar</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/internacoes">Voltar</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private int IdInternacao { get; set; }

    [SupplyParameterFromForm]
    private Internacao? Internacao { get; set; }

    
    private IEnumerable<Medico>? medicos;

    protected override async Task OnInitializedAsync()
    {
        medicos = await MedicoService.GetMedicosAsync();
        Internacao = await InternacaoService.GetInternacaoByIdAsync(IdInternacao);

        if (Internacao is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task UpdateInternacao()
    {
        try
        {
            await InternacaoService.UpdateInternacaoAsync(Internacao!);
            NavigationManager.NavigateTo("/internacoes");
        }
        catch (Exception e)
        {

            Snackbar.Add("Erro ao editar internação." + e.Message, Severity.Error);

        }

    }

}
