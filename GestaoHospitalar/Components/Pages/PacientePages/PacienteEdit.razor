@page "/pacientes/edit"
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IPacienteService PacienteService

<PageTitle>Editar</PageTitle>

<h1>Editar</h1>

<h2>Paciente</h2>
<hr />
@if (Paciente is null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="Paciente" OnValidSubmit="UpdatePaciente" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="Paciente.Cpf" value="@Paciente.Cpf" />
                <div class="mb-3">
                    <label for="nome" class="form-label">Nome:</label>
                    <InputText id="nome" @bind-Value="Paciente.Nome" class="form-control" />
                    <ValidationMessage For="() => Paciente.Nome" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="datanascimento" class="form-label">Data de Nascimento:</label>
                    <InputDate id="datanascimento" @bind-Value="Paciente.DataNascimento" class="form-control" />
                    <ValidationMessage For="() => Paciente.DataNascimento" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="endereco" class="form-label">Endereço:</label>
                    <InputText id="endereco" @bind-Value="Paciente.Endereco" class="form-control" />
                    <ValidationMessage For="() => Paciente.Endereco" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="telefone" class="form-label">Telefone:</label>
                    <InputText id="telefone" @bind-Value="Paciente.Telefone" class="form-control" />
                    <ValidationMessage For="() => Paciente.Telefone" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email:</label>
                    <InputText id="email" @bind-Value="Paciente.Email" class="form-control" />
                    <ValidationMessage For="() => Paciente.Email" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="tiposanguineo" class="form-label">Tipo Sanguíneo:</label>
                    <InputSelect id="tiposanguineo" class="form-control" @bind-Value="Paciente.TipoSanguineo">
                        <option value="A-">A-</option>
                        <option value="A+">A+</option>
                        <option value="B-">B-</option>
                        <option value="B+">B+</option>
                        <option value="AB-">AB-</option>
                        <option value="AB+">AB+</option>
                        <option value="O-">O-</option>
                        <option value="O+">O+</option>
                    </InputSelect>
                    <ValidationMessage For="() => Paciente.TipoSanguineo" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="contatoemergencianome" class="form-label">Nome do Contato de Emergência:</label>
                    <InputText id="contatoemergencianome" @bind-Value="Paciente.ContatoEmergenciaNome" class="form-control" />
                    <ValidationMessage For="() => Paciente.ContatoEmergenciaNome" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="contatoemergenciatelefone" class="form-label">Telefone do Contato de Emergência:</label>
                    <InputText id="contatoemergenciatelefone" @bind-Value="Paciente.ContatoEmergenciaTelefone" class="form-control" />
                    <ValidationMessage For="() => Paciente.ContatoEmergenciaTelefone" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="contatoemergenciarelacao" class="form-label">Relação do Contato de Emergência:</label>
                    <InputText id="contatoemergenciarelacao" @bind-Value="Paciente.ContatoEmergenciaRelacao" class="form-control" />
                    <ValidationMessage For="() => Paciente.ContatoEmergenciaRelacao" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Salvar</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/pacientes">Voltar</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private string Cpf { get; set; }

    [SupplyParameterFromForm]
    private Paciente? Paciente { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Paciente = await PacienteService.GetPacienteByCpfAsync(Cpf);

        if (Paciente is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task UpdatePaciente()
    {

        try
        {
            await PacienteService.UpdatePacienteAsync(Paciente!);
            NavigationManager.NavigateTo("/pacientes");
        }
        catch (Exception e)
        {

            Snackbar.Add("Erro ao editar pacientes." + e.Message, Severity.Error);

        }
    }
}
