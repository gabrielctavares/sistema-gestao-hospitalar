@page "/pacientes/delete"
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Paciente</h2>
    <hr />
    @if (paciente is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@paciente.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataNascimento</dt>
            <dd class="col-sm-10">@paciente.DataNascimento</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Endereco</dt>
            <dd class="col-sm-10">@paciente.Endereco</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Telefone</dt>
            <dd class="col-sm-10">@paciente.Telefone</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@paciente.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TipoSanguineo</dt>
            <dd class="col-sm-10">@paciente.TipoSanguineo</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ContatoEmergenciaNome</dt>
            <dd class="col-sm-10">@paciente.ContatoEmergenciaNome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ContatoEmergenciaTelefone</dt>
            <dd class="col-sm-10">@paciente.ContatoEmergenciaTelefone</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ContatoEmergenciaRelacao</dt>
            <dd class="col-sm-10">@paciente.ContatoEmergenciaRelacao</dd>
        </dl>
        <EditForm method="post" Model="paciente" OnValidSubmit="DeletePaciente" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(paciente is null)">Delete</button> |
            <a href="/pacientes">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Paciente? paciente;

    [SupplyParameterFromQuery]
    private string Cpf { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //using var context = DbFactory.CreateDbContext();
        paciente = await Task.FromResult<Paciente>(null!); // await context.Paciente.FirstOrDefaultAsync(m => m.Cpf == Cpf);

        if (paciente is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeletePaciente()
    {
        //using var context = DbFactory.CreateDbContext();
        //context.Paciente.Remove(paciente!);
       // await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/pacientes");
    }
}
