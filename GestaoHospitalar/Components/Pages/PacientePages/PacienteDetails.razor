@page "/pacientes/details"
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IPacienteService PacienteService

<PageTitle>Detalhes</PageTitle>

<h1>Detalhes</h1>

<div>
    <h2>Paciente</h2>
    <hr />
    @if (paciente is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CPF</dt>
            <dd class="col-sm-10">@paciente.Cpf</dd>
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@paciente.Nome</dd>
            <dt class="col-sm-2">DataNascimento</dt>
            <dd class="col-sm-10">@paciente.DataNascimento</dd>
            <dt class="col-sm-2">Endereco</dt>
            <dd class="col-sm-10">@paciente.Endereco</dd>
            <dt class="col-sm-2">Telefone</dt>
            <dd class="col-sm-10">@paciente.Telefone</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@paciente.Email</dd>
            <dt class="col-sm-2">Tipo Sanguíneo</dt>
            <dd class="col-sm-10">@paciente.TipoSanguineo</dd>
        </dl>
        <div>
            <a href="@($"/pacientes/edit?cpf={paciente.Cpf}")">Editar</a> |
            <a href="@($"/pacientes")">Voltar</a>
        </div>
    }
</div>

@code {
    private Paciente? paciente;

    [SupplyParameterFromQuery]
    private string Cpf { get; set; }

    protected override async Task OnInitializedAsync()
    {
        paciente = await PacienteService.GetPacienteByCpfAsync(Cpf);
        
        if (paciente is null)
        {
            Snackbar.Add("Agendamento não encontrado.", Severity.Error);
            NavigationManager.NavigateTo("/notfound");
        }
    }
}
