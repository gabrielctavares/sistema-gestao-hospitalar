@page "/medicos/edit"
@inject NavigationManager NavigationManager
@inject IMedicoService MedicoService
@inject ISnackbar Snackbar

<PageTitle>Editar</PageTitle>

<h1>Editar</h1>

<h2>Médico</h2>
<hr />
@if (Medico is null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="Medico" OnValidSubmit="UpdateMedico" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="Medico.IdFuncionario" value="@Medico.IdFuncionario" />
                <div class="mb-3">
                    <label for="Cpf" class="form-label">CPF:</label>
                    <InputText id="cCpfrm" @bind-Value="Medico.Cpf" class="form-control" />
                    <ValidationMessage For="() => Medico.Cpf" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="Nome" class="form-label">Nome:</label>
                    <InputText id="Nome" @bind-Value="Medico.Nome" class="form-control" />
                    <ValidationMessage For="() => Medico.Nome" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="Endereco" class="form-label">Endereço:</label>
                    <InputText id="Endereco" @bind-Value="Medico.Endereco" class="form-control" />
                    <ValidationMessage For="() => Medico.Endereco" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="Telefone" class="form-label">Telefone:</label>
                    <InputText id="Telefone" @bind-Value="Medico.Telefone" class="form-control" />
                    <ValidationMessage For="() => Medico.Telefone" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="Email" class="form-label">Email:</label>
                    <InputText id="Email" @bind-Value="Medico.Email" class="form-control" />
                    <ValidationMessage For="() => Medico.Email" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="crm" class="form-label">CRM:</label>
                    <InputText id="crm" @bind-Value="Medico.Crm" class="form-control" />
                    <ValidationMessage For="() => Medico.Crm" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="especialidade" class="form-label">Especialidade:</label>
                    <InputText id="especialidade" @bind-Value="Medico.Especialidade" class="form-control" />
                    <ValidationMessage For="() => Medico.Especialidade" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Salvar</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/medicos">Voltar</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private int IdFuncionario { get; set; }

    [SupplyParameterFromForm]
    private Medico? Medico { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Medico = await MedicoService.GetMedicoByIdFuncionarioAsync(IdFuncionario);

        if (Medico is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    private async Task UpdateMedico()
    {
        try
        {
            await MedicoService.UpdateMedicoAsync(Medico!);
            NavigationManager.NavigateTo("/medicos");
        }
        catch (Exception e)
        {

            Snackbar.Add("Erro ao editar médicos." + e.Message, Severity.Error);

        }

    }
}
